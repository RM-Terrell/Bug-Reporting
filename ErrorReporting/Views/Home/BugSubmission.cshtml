@model ErrorReporting.ViewModels.ReportFormViewModel
@{
    ViewBag.Title = "BugSubmission";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Bug Submission Page</h2>

@using (@Html.BeginForm("Save", "Home"))
{
    <div class="container">
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.BugReport.Name)
                    @Html.TextBoxFor(m => m.BugReport.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.BugReport.Name)
                </div>   
                <div class="form-group">
                    @Html.LabelFor(m => m.BugReport.ErrorMessage) @Html.Label("(if given)")
                    @Html.TextBoxFor(m => m.BugReport.ErrorMessage, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.BugReport.Description) @Html.Label("(see section 1)")
                    @Html.TextAreaFor(m => m.BugReport.Description, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.BugReport.Description)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.BugReport.Reproduction) @Html.Label("(see section 3)")
                    @Html.TextAreaFor(m => m.BugReport.Reproduction, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.BugReport.Reproduction)
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.BugReport.Severity) @Html.Label("(see section 2)")
                    @Html.TextBoxFor(m => m.BugReport.Severity, new { @class = "form-control", @Value = 5 })
                    @Html.ValidationMessageFor(m => m.BugReport.Severity)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.BugReport.OperatingSystemId)
                    @Html.DropDownListFor(m => m.BugReport.OperatingSystemId, new SelectList(Model.OperatingSystems, "Id", "OperatingSystemName"), "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.BugReport.OperatingSystemId)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.BugReport.BrowserId)
                    @Html.DropDownListFor(m => m.BugReport.BrowserId, new SelectList(Model.Browsers, "Id", "BrowserName"), "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.BugReport.BrowserId)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.BugReport.BugOccurrenceDate)
                    @Html.TextBoxFor(m => m.BugReport.BugOccurrenceDate, "{0:d MMM YYYY}", new { @class = "form-control", @Value = @DateTime.Now.ToShortDateString() })
                    @Html.ValidationMessageFor(m => m.BugReport.BugOccurrenceDate)
                </div>
                
                <!--Value control for form submissions fields not visible to user-->
                <div class="form-group">
                    @Html.TextBoxFor(m => m.BugReport.StatusId, new { @class = "form-control", @Value = 1, style = "display: none;" })                   
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(m => m.BugReport.SubmissionDate, "{0:d MMM YYYY}", new { @class = "form-control", @Value = @DateTime.Now.ToShortDateString(), style = "display: none;" })
                </div>
                
            </div>
        </div>
    </div>
     
    <button type="submit" class="btn btn-primary">Submit</button>
}

